<!DOCTYPE html>
<html>
<head>
    <title>Geolocation Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <style>
        #map { height: 100vh;   }    }
    </style>
</head>
<body>
    <div id="map"></div>
<!-- <img src="circle.svg" alt="circle icon" height="50px" width="50px"> -->
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        // Global variable to store coordinates
        let userCoords = { lat: 0, lng: 0 };

        // Get location automatically
        navigator.geolocation.getCurrentPosition(
            function(position) {
                userCoords = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                initializeMap();
            },
            function(error) {
                alert("Location access denied");
            }
        );
					// Map initialization function
		function initializeMap() 
		{
			// Check if userCoords is defined before initializing the map
			if (!userCoords) {
				alert("Unable to retrieve your location.");
				return;
			}
			
			// Create the map and set its view to the user's coordinates
			const map = L.map('map').setView([userCoords.lat, userCoords.lng], 10000000);
			
			L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
				attribution: 'Â© OpenStreetMap',
				maxZoom: 19,
				id: 'maptiler',
				tileSize: 512,
				zoomOffset: -1
			}).addTo(map);

			var leafletAttribution = L.control.attribution({position: 'bottomright'});
			var leafleticon=L.icon({
				iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',
				shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',
				iconSize: [25, 41],
				iconAnchor: [12, 41],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var leafleIcon = L.icon.extend({
				// iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png',
				// iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',
				// iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png',
				shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
				iconSize: [50, 100],
				iconAnchor: [22, 90],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var greenicon = L.icon({
				iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-green.png',
				shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
				iconSize: [50, 100],
				iconAnchor: [22, 90],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var redicon = L.icon({
				iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-red.png',
				shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
				iconSize: [50, 100],
				iconAnchor: [22, 90],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var blueicon = L.icon({
				iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-blue.png',
				shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
				iconSize: [50, 100],
				iconAnchor: [22, 90],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var yellowicon = L.icon({
				iconUrl: 'https://leafletjs.com/examples/custom-icons/leaf-yellow.png',
				shadowUrl: 'https://leafletjs.com/examples/custom-icons/leaf-shadow.png',
				iconSize: [50, 100],
				iconAnchor: [22, 90],
				popupAnchor: [1, -34],
				shadowSize: [41, 41]
			});
			var greenmarker=L.marker([userCoords.lat+0.001, userCoords.lng], { icon: greenicon }).addTo(map);
			var redmarker=L.marker([userCoords.lat-0.001, userCoords.lng], { icon: redicon }).addTo(map);
			var bluemarker=L.marker([userCoords.lat, userCoords.lng+0.001], { icon: blueicon }).addTo(map);
			var yellowmarker=L.marker([userCoords.lat, userCoords.lng-0.001], { icon: yellowicon }).addTo(map);
			leafletAttribution.addTo(map);
			// Add a marker for the user's location
			L.marker([userCoords.lat, userCoords.lng], { icon: leafleticon }).addTo(map)
				.bindPopup('Your location').openPopup();
			var circle = L.circle([userCoords.lat, userCoords.lng], {color: 'blue',fillColor: '#30f',fillOpacity: 0.5,radius: 5}).addTo(map);
			var polygon = L.polyline([[userCoords.lat + 0.01, userCoords.lng + 0.01],[userCoords.lat + 0.01, userCoords.lng - 0.01],[userCoords.lat - 0.01, userCoords.lng - 0.01],[userCoords.lat - 0.01, userCoords.lng + 0.01],[userCoords.lat + 0.01, userCoords.lng + 0.01]],{color: 'red',weight: 1,opacity: 0.5,fillColor: '#f03',fillOpacity: 0.5}).addTo(map);
			polygon.bindPopup("You are within this polygon.");
			// Bind a popup to the circle	
			circle.bindPopup("You are within this circle.");
			map.on('click', function(e) {
				L.marker([e.latlng.lat, e.latlng.lng], { icon: leafleticon }).addTo(map)
					.bindPopup('Clicked location: ' + e.latlng.toString()).openPopup();
			});		

		}

    </script>
</body>
</html>
